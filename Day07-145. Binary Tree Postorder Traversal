Problem Link : https://leetcode.com/problems/binary-tree-postorder-traversal/description/

C++ Solution: 

class Solution {
    void postorder(TreeNode*& root,vector<int>& ans){
        if(root){
            postorder(root->left,ans);
            postorder(root->right,ans);
            ans.push_back(root->val);
        }
    }
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        postorder(root,ans);
        return ans;
    }
};

Java Solution:

class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
         List<Integer> ans=new ArrayList<>();
        postorder(root,ans);
        return ans;
    }
    void postorder(TreeNode root,List<Integer> ans){
        if(root!=null){
            postorder(root.left,ans);
            postorder(root.right,ans);
            ans.add(root.val);
        }
    }
}
