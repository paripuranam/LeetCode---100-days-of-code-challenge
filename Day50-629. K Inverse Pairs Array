Problem Link : https://leetcode.com/problems/k-inverse-pairs-array/description/?envType=daily-question&envId=2024-01-27


Java Solution:
import java.util.Arrays;

class Solution {
    public int kInversePairs(int n, int k) {
        int mod = (int) Math.pow(10, 9) + 7;
        int[][] dp = new int[n + 1][k + 1];
        dp[0][0] = 1;

        for (int i = 1; i <= n; ++i) {
            for (int j = 0; j < i; ++j) {
                for (int m = 0; m <= k; ++m) {
                    if (m - j >= 0 && m - j <= k) {
                        dp[i][m] = (dp[i][m] + dp[i - 1][m - j]) % mod;
                    }
                }
            }
        }

        return dp[n][k];
    }
}



C++ Solution:
class Solution {
public:
    int kInversePairs(int n, int k) {
        vector<vector<int>> dp(n + 1, vector<int>(k+1, 0));
        dp[0][0] = 1;
        for(int i = 1; i <= n; ++i){
            for(int j = 0; j < i; ++j){ 
                for(int m = 0; m <= k; ++m){ 
                    if(m - j >= 0 && m - j <= k){
                        dp[i][m] = (dp[i][m] + dp[i-1][m-j]) % mod; 
                    }
                }
            }
        }
        return dp[n][k];
    }
private:
    const int mod = pow(10, 9) + 7;
};
