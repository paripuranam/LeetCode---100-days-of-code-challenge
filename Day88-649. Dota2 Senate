Problem Link : https://leetcode.com/problems/dota2-senate/description/?envType=study-plan-v2&envId=leetcode-75


Java Solution:
class Solution {
    public String predictPartyVictory(String senate) {
        Queue<Integer> rad = new LinkedList<>();
        Queue<Integer> dir = new LinkedList<>();
        int n = senate.length();
        for (int i = 0; i < n; i++) {
            if (senate.charAt(i) == 'R') {
                rad.offer(i);
            } else {
                dir.offer(i);
            }
        }
        while (!rad.isEmpty() && !dir.isEmpty()) {
            if (rad.peek() < dir.peek()) {
                rad.offer(n++);
            } else {
                dir.offer(n++);
            }
            rad.poll();
            dir.poll();
        }
        return (rad.isEmpty()) ? ("Dire") : ("Radiant");
    }
}


C++ Solution:
class Solution {
public:
    string predictPartyVictory(string senate) {
        queue<int> rad, dir;
        int n = senate.length();
        for (int i = 0; i < n; i++){
            if (senate[i] == 'R'){
                rad.push(i);
            }
            else {
                dir.push(i);
            }
        }
        while (!rad.empty() && !dir.empty()){
            if (rad.front() < dir.front()){
                rad.push(n++);
            }
            else {
                dir.push(n++);
            }
            rad.pop(), dir.pop();
        }
        return (rad.empty()) ? ("Dire") : ("Radiant");
    }
};
