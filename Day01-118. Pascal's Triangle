Problem Link : https://leetcode.com/problems/pascals-triangle/description/

Java Solution:
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for(int i=1;i<=numRows;i++){
            ans.add(generateRow(i));
        }
        return ans;
    }
    public List<Integer> generateRow(int row){
    long res=1;
    List<Integer> ansRow= new ArrayList<>();
    ansRow.add(1);
    for(int col=1;col<row;col++){
        res = res * (row - col);
        res = res / col;
        ansRow.add((int)res);
    }
    return ansRow;
}
}

C++ Solution:

vector<int> generateRow(int row){
        long long res=1;
        vector<int> ansRow;
        ansRow.push_back(1);
        for(int col=1;col<row;col++){
            res = res*(row - col);
            res = res/(col);
            ansRow.push_back(res);
        }
        return ansRow;
    }

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        for(int i=1;i<=numRows;i++){
            ans.push_back(generateRow(i));
        }
        return ans;
    }

    
};
