Problem Link : https://leetcode.com/problems/rotate-list/description/

Java Solution :
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || k == 0) {
            return head;
        }       
        int cnt = 1; 
        ListNode temp = head;
        while (temp.next != null) {
            cnt++;
            temp = temp.next;
        }  
        k = k % cnt;  
        if (k == 0) {
            return head;
        }       
        temp.next = head; 

        temp = head;
        for (int i = 0; i < cnt - k - 1; i++) {
            temp = temp.next;
        }
        ListNode newHead = temp.next;
        temp.next = null;
        return newHead;
    }
}

------------------------------------------------------------------------------------------------------------- 

C++ Solution:

class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head == nullptr || k == 0) {
            return head;
        }       
        int cnt = 1; 
        ListNode* temp = head;
        while (temp->next != nullptr) {
            cnt++;
            temp = temp->next;
        }  
        k = k % cnt;  
        if (k == 0) {
            return head;
        }       
        temp->next = head; 

        temp = head;
        for (int i = 0; i < cnt - k - 1; i++) {
            temp = temp->next;
        }
        ListNode* newHead = temp->next;
        temp->next = nullptr;
        return newHead;
    }
};
