Problem Link : https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points/description/?envType=daily-question&envId=2023-12-21

Java Solution :
class Solution {
    public int maxWidthOfVerticalArea(int[][] points) {
        Arrays.sort(points, (a,b) -> Integer.compare(a[0],b[0]));

        int max_width = 0;

        for (int i = 1; i < points.length; ++i) {
            int width = points[i][0] - points[i - 1][0];
            max_width = Math.max(max_width, width);
        }

        return max_width;
    }
}

C++ Solution :
class Solution {
public:
    int maxWidthOfVerticalArea(std::vector<std::vector<int>>& points) {
        sort(points.begin(), points.end(), [](const auto& a, const auto& b) {
            return a[0] < b[0];
        });

        int max_width = 0;

        for (int i = 1; i < points.size(); ++i) {
            int width = points[i][0] - points[i - 1][0];
            max_width = max(max_width, width);
        }

        return max_width;
    }
};
