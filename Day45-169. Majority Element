Problem Link : https://leetcode.com/problems/majority-element/description/


Java Solution:
class Solution {
    public int majorityElement(int[] nums) {
       int n = nums.length;
       int cnt  = 0;
       int e = nums[0];
       for(int i=0;i<n;i++){
           if(cnt==0){
               cnt=1;
               e=nums[i];
           }
           else if(nums[i]==e){
               cnt++;
           }
           else cnt--;
       }
       int cnt1 = 0;
       for(int i=0;i<n;i++){
           if(nums[i]==e){
               cnt1++;
           }
           if(cnt1 > (n/2)) return nums[i];
       }
       return -1; 
    }
}



C++ Solution:
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int cnt=0;
        int e;
        for(int i=0;i<nums.size();i++){
            if(cnt==0){
                cnt=1;
                e=nums[i];
            }
            else if(nums[i]==e){
                cnt++;
            }
            else
            cnt--;
        }
        int cnt1=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==e)
            cnt1++;
            if(cnt1>(nums.size()/2))
            return nums[i];
        }
        return -1;
    }
};
