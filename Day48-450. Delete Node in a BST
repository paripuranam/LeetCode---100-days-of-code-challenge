Problem Link : https://leetcode.com/problems/delete-node-in-a-bst/description/


Java Solution:
public class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        if (root != null) {
            if (key < root.val)
                root.left = deleteNode(root.left, key);
            else if (key > root.val)
                root.right = deleteNode(root.right, key);
            else {
                if (root.left == null && root.right == null)
                    return null;
                if (root.left == null || root.right == null)
                    return (root.left != null) ? root.left : root.right;

                TreeNode temp = root.left;
                while (temp.right != null)
                    temp = temp.right;
                root.val = temp.val;
                root.left = deleteNode(root.left, temp.val);
            }
        }
        return root;
    }
}



C++ Solution:
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) 
    {
        if(root)
        {
            if(key<root->val)
            root->left = deleteNode(root->left,key);
            else if(key>root->val)
            root->right = deleteNode(root->right,key);
            else{
                if(!root->left && !root->right)
                return NULL;
                if(!root->left || !root->right)
                return root->left ? root->left : root->right;

                TreeNode* temp=root->left;
                while(temp->right !=NULL)
                temp=temp->right;
                root->val=temp->val;
                root->left = deleteNode(root->left,temp->val);
            }
        }
        return root;
    }
};
