Problem Link : https://leetcode.com/problems/find-the-difference-of-two-arrays/description/?envType=study-plan-v2&envId=leetcode-75

Java Solution:
class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        Set<Integer> s1 = new HashSet<Integer>();
        Set<Integer> s2 = new HashSet<Integer>();
        
        for(int i : nums1){
            s1.add(i);
        }
        for(int i : nums2){
            s2.add(i);
        }
        List<List<Integer>> ans = new ArrayList();
        ans.add(new ArrayList());
        ans.add(new ArrayList());
        for(int i : s1){
            if(!s2.contains(i)){
                ans.get(0).add(i);
            }
        }
        for(int i : s2){
            if(!s1.contains(i)){
                ans.get(1).add(i);
            }
        }
        
        return ans;
    }
}



C++ Solution:
#include <vector>
#include <unordered_set>

using namespace std;

class Solution {
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> s1(nums1.begin(), nums1.end());
        unordered_set<int> s2(nums2.begin(), nums2.end());
        
        vector<vector<int>> ans(2, vector<int>());
        
        for(int i : s1) {
            if(s2.find(i) == s2.end()) {
                ans[0].push_back(i);
            }
        }
        
        for(int i : s2) {
            if(s1.find(i) == s1.end()) {
                ans[1].push_back(i);
            }
        }
        
        return ans;
    }
};
