Problem Link : https://leetcode.com/problems/palindromic-substrings/?envType=daily-question&envId=2024-02-10


Java Solution:
class Solution {
    int count = 0;
    
    public int countSubstrings(String s) {
        if (s == null || s.length() == 0) return 0;
        
        for (int i = 0; i < s.length(); i++) { 
            extendPalindrome(s, i, i);
            extendPalindrome(s, i, i + 1); 
        }
        
        return count;
    }
    
    private void extendPalindrome(String s, int left, int right) {
        while (left >=0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            count++; 
            left--; 
            right++;
        }
    }
}



C++ Solution:
class Solution {
public:
    int count = 0;
    
    int countSubstrings(string s) {
        if (s.empty()) return 0;
        
        for (int i = 0; i < s.length(); i++) { 
            extendPalindrome(s, i, i);
            extendPalindrome(s, i, i + 1); 
        }
        
        return count;
    }
    
private:
    void extendPalindrome(string s, int left, int right) {
        while (left >= 0 && right < s.length() && s[left] == s[right]) {
            count++; 
            left--; 
            right++;
        }
    }
};
