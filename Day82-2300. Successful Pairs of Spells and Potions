Problem Link : https://leetcode.com/problems/successful-pairs-of-spells-and-potions/description/?envType=study-plan-v2&envId=leetcode-75

Java Solution:
class Solution {
    public int[] successfulPairs(int[] spells, int[] potions, long success) {
        int s = spells.length;
        int p = potions.length;
        Arrays.sort(potions);
        int[] ans = new int[s];
        for(int i = 0;i<s;i++){
            int l = 0;
            int r = p-1;
            while(l<=r){
                int mid = l+(r-l)/2;
                long x =(long)spells[i]*potions[mid];
                if(x<success){
                    l = mid+1;
                }
                else r=mid-1;
            }
            ans[i] = p-r-1;
        }
        return ans;
    }
}

C++ Solution:
class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        int s = spells.size();
        int p = potions.size();
        sort(potions.begin(), potions.end());
        vector<int> ans;
        for(auto &i:spells){
            int l=0;
            int r=p-1;
            while(l<=r){
                int mid = (l+r)/2;
                int long x = potions[mid];
                if(i*x<success){
                    l = mid+1;
                }
                else r=mid-1;
            }
            ans.push_back(p-r-1);
        }
        return ans;
    }
};
