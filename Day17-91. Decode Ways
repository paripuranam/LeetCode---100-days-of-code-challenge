Problem Link : https://leetcode.com/problems/decode-ways/description/?envType=daily-question&envId=2023-12-25

Java Solution :
public class Solution {
    public int numDecodings(String s) {
        if (s == null || s.length() == 0 || s.charAt(0) == '0') {
            return 0;
        }

        int n = s.length();
        int[] num = new int[n + 1];
        num[0] = 1;
        num[1] = 1;

        for (int i = 2; i <= n; ++i) {
            int oneDigit = s.charAt(i - 1) - '0';
            int twoDigits = Integer.parseInt(s.substring(i - 2, i));

            if (oneDigit != 0) {
                num[i] += num[i - 1];
            }

            if (10 <= twoDigits && twoDigits <= 26) {
                num[i] += num[i - 2];
            }
        }

        return num[n];
    }
}

C++ Solution : 
class Solution {
public:
    int numDecodings(std::string s) {
        if (s.empty() || s[0] == '0') {
            return 0;
        }

        int n = s.length();
        std::vector<int> num(n + 1, 0);
        num[0] = 1;
        num[1] = 1;

        for (int i = 2; i <= n; ++i) {
            int oneDigit = s[i - 1] - '0';
            int twoDigits = std::stoi(s.substr(i - 2, 2));

            if (oneDigit != 0) {
                num[i] += num[i - 1];
            }

            if (10 <= twoDigits && twoDigits <= 26) {
                num[i] += num[i - 2];
            }
        }

        return num[n];
    }
};
