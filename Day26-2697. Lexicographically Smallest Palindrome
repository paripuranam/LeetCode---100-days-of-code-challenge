Problem Link : https://leetcode.com/problems/lexicographically-smallest-palindrome/description/

Java Solution :
public class Solution {
    public String makeSmallestPalindrome(String s) {
        int i = 0;
        int j = s.length() - 1;
        char[] ch = s.toCharArray();
        
        while (i <= j) {
            if (ch[i] == ch[j]) {
                i++;
                j--;
            } else if (ch[i] < ch[j]) {
                ch[j] = ch[i];
                j--;
                i++;
            } else {
                ch[i] = ch[j];
                i++;
                j--;
            }
        }
        
        return new String(ch);
    }
}



C++ Solution:
class Solution {
public:
    string makeSmallestPalindrome(string s) {
        int i=0;
        int j=s.size()-1;
        while(i<=j){
            if(s[i] == s[j]){
                i++;
                j--;
            }
            else if(s[i]<s[j]){
                s[j]=s[i];
                j--;
                i++;
            }
            else {
                s[i]=s[j];
                i++;
                j--;
            }
        }
        return s;
    }
};


