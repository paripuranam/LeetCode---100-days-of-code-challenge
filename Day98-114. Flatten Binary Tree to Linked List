Problem Link : https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description/


Java Solution:
class Solution {
    TreeNode head = null;
    public void flatten(TreeNode root) {
        if (root != null) order(root);
    }
    private void order(TreeNode node) {
        if (node.right != null) order(node.right);
        if (node.left != null) order(node.left);
        node.left = null;
        node.right = head;
        head = node;
    }
}


C++ Solution:
class Solution {
    TreeNode* head = nullptr;
public:
    void flatten(TreeNode* root){
        if (root != nullptr) order(root);
    }
    private:
    void order(TreeNode* node) {
        if (node->right != nullptr) order(node->right);
        if (node->left != nullptr) order(node->left);
        node->left = nullptr;
        node->right = head;
        head = node;
    }
};
