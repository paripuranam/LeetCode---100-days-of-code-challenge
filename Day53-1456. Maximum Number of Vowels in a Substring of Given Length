Problem Link : https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/?envType=study-plan-v2&envId=leetcode-75


Java Solution:
public class Solution {
    public boolean isVowel(char c) {
        char t = Character.toLowerCase(c);
        return t == 'a' || t == 'e' || t == 'i' || t == 'o' || t == 'u';
    }

    public int maxVowels(String s, int k) {
        int n = s.length();
        int start = 0;
        int end = 0;

        int ans = 0;
        int temp = 0;

        while (end < n) {
            if (isVowel(s.charAt(end))) {
                temp++;
            }

            if (end - start == k) {
                if (isVowel(s.charAt(start))) {
                    temp--;
                }
                start++;
            }

            ans = Math.max(ans, temp);
            end++;
        }

        return ans;
    }
}



C++ Solution:
class Solution {
public:
    bool isVowel(char c){
        char t = tolower(c);
        return t == 'a' or t == 'e' or t=='i' or t=='o' or t=='u';
    }
    
    int maxVowels(string s, int k) {
        int n = s.size();
        int start = 0;
        int end = 0;

        int ans = 0;  
        int temp = 0; 

        while(end < n){
            if(isVowel(s[end])){
               temp++;
           }
          
           if(end-start == k ){
               if(isVowel(s[start])){
                   temp--;  
               }
               start++;  
           }
           
           ans = max(ans, temp); 
           end++;  
        }
        
        return ans; 
    }
};
