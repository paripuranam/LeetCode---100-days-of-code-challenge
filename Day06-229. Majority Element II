Problem Link : https://leetcode.com/problems/majority-element-ii/description/

Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]
 
Constraints:
1 <= nums.length <= 5 * 104
-109 <= nums[i] <= 109

Java Solution:

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int cnt1=0,cnt2=0;
        int el1,el2;
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            if(cnt1==0 && el2!=nums[i]){
                cnt1=1;
                el1=nums[i];
            }
            else if(cnt2==0 && el1!=nums[i]){
                cnt2=1;
                el2=nums[i];
            }
           else if (nums[i] == el1) cnt1++;
            else if (nums[i] == el2) cnt2++;
            else {
                cnt1--; cnt2--;
            }
            
        }
        int c1=0,c2=0;
        for(int i=0;i<nums.size();i++){
            if(el1==nums[i]){
                c1++;
            }
            if(el2==nums[i]){
                c2++;
            }
        }
        if(c1>nums.size()/3){
            ans.push_back(el1);
        }
        if(c2>nums.size()/3){
            ans.push_back(el2);
        }
        return ans;
    }
};

C++ Solution:

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int cnt1=0,cnt2=0;
        int el1,el2;
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            if(cnt1==0 && el2!=nums[i]){
                cnt1=1;
                el1=nums[i];
            }
            else if(cnt2==0 && el1!=nums[i]){
                cnt2=1;
                el2=nums[i];
            }
           else if (nums[i] == el1) cnt1++;
            else if (nums[i] == el2) cnt2++;
            else {
                cnt1--; cnt2--;
            }
            
        }
        int c1=0,c2=0;
        for(int i=0;i<nums.size();i++){
            if(el1==nums[i]){
                c1++;
            }
            if(el2==nums[i]){
                c2++;
            }
        }
        if(c1>nums.size()/3){
            ans.push_back(el1);
        }
        if(c2>nums.size()/3){
            ans.push_back(el2);
        }
        return ans;
    }
};
