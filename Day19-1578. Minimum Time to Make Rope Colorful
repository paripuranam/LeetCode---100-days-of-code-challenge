Problem Link : https://leetcode.com/problems/minimum-time-to-make-rope-colorful/description/?envType=daily-question&envId=2023-12-27

Java Solution:
class Solution {
    public int minCost(String colors, int[] neededTime) {
         int n= colors.length();
        int sum=0;
        int prev=0;
        for(int i=1;i<n;i++){
            if(colors.charAt(prev) != colors.charAt(i)){
                prev=i;
            }
            else{
                if(neededTime[prev] < neededTime[i]){
                    sum+=neededTime[prev];
                    prev=i;
                }
                else{
                    sum+=neededTime[i];
                }
            }
        }
        return sum;
    }
}


C++ Solution:
class Solution {
public:
    int minCost(string colors, vector<int>& neededTime) {
        int n= colors.size();
        int sum=0;
        int prev=0;
        for(int i=1;i<n;i++){
            if(colors[prev] != colors[i]){
                prev=i;
            }
            else{
                if(neededTime[prev] < neededTime[i]){
                    sum+=neededTime[prev];
                    prev=i;
                }
                else{
                    sum+=neededTime[i];
                }
            }
        }
        return sum;
    }
};
