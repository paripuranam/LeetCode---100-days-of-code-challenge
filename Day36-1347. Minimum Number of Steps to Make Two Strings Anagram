Problem Link : https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/description/?envType=daily-question&envId=2024-01-13


Java Solution:
import java.util.Hashtable;
class Solution {
    public int minSteps(String s, String t) {
        Hashtable<Character, Integer> mp = new Hashtable<>();

        for(int i=0;i<s.length();i++){
            if(mp.containsKey(s.charAt(i))){
                mp.put(s.charAt(i), mp.get(s.charAt(i))+1);
            }
            else
            mp.put(s.charAt(i),1);
        }

        int cnt =0;
        for(int i=0;i<t.length();i++){
            char c = t.charAt(i);
            if(mp.containsKey(c)){
                mp.put(c, mp.get(c)-1);
                if(mp.get(t.charAt(i))==0){
                    mp.remove(t.charAt(i));
                }
            }
            else{
                cnt++;
            }
        }
        return cnt;
    }
}



C++ Solution:
class Solution {
public:
    int minSteps(string s, string t) {
        unordered_map<char, int> mp;

        for (int i = 0; i < s.length(); i++) {
            if (mp.find(s[i]) != mp.end()) {
                mp[s[i]]++;
            } else {
                mp[s[i]] = 1;
            }
        }
        
        int cnt=0;
        for (int i = 0; i < t.length(); i++) {
            if (mp.find(t[i]) != mp.end()) {
                mp[t[i]]--;
                if (mp[t[i]] == 0) {
                    mp.erase(t[i]);
                }
            }
            else cnt++;
        }
        return cnt;
    }
};
