Problem Link : https://leetcode.com/problems/range-sum-of-bst/description/?envType=daily-question&envId=2024-01-08


Java Solution:
class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        if(root==null) return 0;

        int sum = (root.val >= low && root.val <= high) ? root.val : 0;
        int leftSum = rangeSumBST(root.left,low,high);
        int rightSum = rangeSumBST(root.right,low,high);

        return sum+leftSum+rightSum;
    }
}


C++ Solution:
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        if(root==nullptr) return 0;

        int sum = (root->val >= low && root->val <= high) ? root->val : 0;
        int leftSum = rangeSumBST(root->left,low,high);
        int rightSum = rangeSumBST(root->right,low,high);

        return sum+leftSum+rightSum;
    }
};
end