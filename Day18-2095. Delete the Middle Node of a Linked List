Problem Link : https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/description/

Java Solution : 

public class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if (head == null || head.next == null) {
            return null;
        }

        ListNode slow = head;
        ListNode fast = head.next;

        while (fast != null) {
            fast = fast.next;
            if (fast == null || fast.next == null) {
                break;
            }
            fast = fast.next;
            slow = slow.next;
        }

        slow.next = slow.next.next;

        return head;
    }
}


C++ Solution:

class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
       if(!head || !head->next){
            return NULL;
        }
        ListNode* slow=head;
        ListNode* fast=head->next;
        while(fast){
            fast=fast->next;
            if(!fast ||!fast->next){
                break;
            }
            fast=fast->next;
            slow=slow->next;
        }
        slow->next=slow->next->next;
        return head;
    } 
};
