Problem Link : https://leetcode.com/problems/destination-city/description/?envType=daily-question&envId=2023-12-15

Java Solution:

class Solution {
    public String destCity(List<List<String>> paths) {
        Set<String> cities = new HashSet<>(); 
        for (List<String> path : paths) {
            cities.add(path.get(0)); 
        }
        
        for (List<String> path : paths) {
            String destination = path.get(1); 
            if (!cities.contains(destination)) {
                return destination; 
            }
        }
        return "";
    }
}


C++ Solution:

class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        unordered_set<string> cities;
        for(const auto& path : paths)
        {
            cities.insert(path[0]);
        }
        for(const auto& path : paths)
        {
            const std::string& dest = path[1];
            if(cities.find(dest)==cities.end())
            {
                return dest;
            }
        }
        return "";
    }
};
