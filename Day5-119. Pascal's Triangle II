Problem Link : https://leetcode.com/problems/pascals-triangle-ii/description/

Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: rowIndex = 3
Output: [1,3,3,1]

Example 2:
Input: rowIndex = 0
Output: [1]

Example 3:
Input: rowIndex = 1
Output: [1,1]
 
Constraints:
0 <= rowIndex <= 33.

Java Solution:

class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> ans = new ArrayList<>();
        long res=1;
        ans.add(1);
        for(int i=1;i<=rowIndex;i++){
           res = res * ((rowIndex+1) - i);
           res = res / i;
           ans.add((int)res);
        }
        return ans;
    }
}

C++ Solution:

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> ans;
        long long res=1;
        ans.push_back(1);
        for(int i=1;i<=rowIndex;i++){
            res = res * ((rowIndex+1) - i);
            res = res / i;
            ans.push_back((int)res);
        }
        return ans;
    }
};
