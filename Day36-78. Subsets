Problem Link : https://leetcode.com/problems/subsets/description/


C++ Solution:
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> ans;
        int n=nums.size();
        for(int i=0; i< pow(2,n);i++){
            vector<int> temp;
            for(int j=0;j<n;j++){
                if(i & (1<<j))
                    temp.push_back(nums[j]);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};



Java Solution:
public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        int n = nums.length;
        for (int i = 0; i < Math.pow(2, n); i++) {
            List<Integer> temp = new ArrayList<>();
            for (int j = 0; j < n; j++) {
                if ((i & (1 << j)) > 0) {
                    temp.add(nums[j]);
                }
            }
            ans.add(temp);
        }
        
        return ans;
    }
}
